# Generated by Django 5.0.4 on 2024-06-03 23:10

import django.db.models.deletion
import django_ckeditor_5.fields
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2083, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('link', models.CharField(blank=True, max_length=2083, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default_profile_pic.png', max_length=2083)),
            ],
            options={
                'verbose_name': 'Actor',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=2083, null=True)),
                ('progress', models.CharField(blank=True, choices=[('Ongoing', 'Ongoing'), ('Complete', 'Complete'), ('On Hiatus', 'On Hiatus')], max_length=100, null=True)),
                ('medium', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Podcast', 'Podcast'), ('Video', 'Video'), ('Live Stream', 'Live Stream')], max_length=100, null=True)),
                ('type', models.CharField(blank=True, choices=[('One-Shot', 'One-Shot'), ('Series', 'Series')], max_length=100, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('link', models.CharField(blank=True, max_length=2083, null=True)),
                ('featured', models.BooleanField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default-rect-img.png', max_length=2083)),
            ],
            options={
                'verbose_name': 'Campaign',
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2083, null=True)),
                ('medium', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Podcast', 'Podcast'), ('Video', 'Video'), ('Live Stream', 'Live Stream')], max_length=100, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('link', models.CharField(blank=True, max_length=2083, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default-rect-img.png', max_length=2083)),
            ],
            options={
                'verbose_name': 'Producer',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2083, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('link', models.CharField(blank=True, max_length=2083, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default-rect-img.png', max_length=2083)),
            ],
            options={
                'verbose_name': 'Publisher',
            },
        ),
        migrations.CreateModel(
            name='ActorAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.actor')),
            ],
        ),
        migrations.CreateModel(
            name='ActorCharacters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.actor')),
            ],
        ),
        migrations.CreateModel(
            name='ActorFollowers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.actor')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignFollowers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignGMs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.actor')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
            ],
        ),
        migrations.AddField(
            model_name='campaign',
            name='gm',
            field=models.ManyToManyField(blank=True, related_name='campaign_gms', through='database.CampaignGMs', to='database.actor'),
        ),
        migrations.AddField(
            model_name='actor',
            name='gm_campaigns',
            field=models.ManyToManyField(blank=True, through='database.CampaignGMs', to='database.campaign'),
        ),
        migrations.CreateModel(
            name='CampaignGuests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=2083, null=True)),
                ('medium', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Podcast', 'Podcast'), ('Video', 'Video'), ('Live Stream', 'Live Stream')], max_length=100, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('link', models.CharField(blank=True, max_length=2083, null=True)),
                ('runtime', models.DurationField(blank=True, verbose_name='Runtime (hh:mm)')),
                ('ep_count', models.IntegerField(default='01')),
                ('airdate', models.DateField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default-rect-img.png', max_length=2083)),
                ('in_campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.campaign', verbose_name='Campaign')),
            ],
            options={
                'verbose_name': 'Episode',
            },
        ),
        migrations.CreateModel(
            name='EpisodesWatched',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.episode')),
            ],
        ),
        migrations.CreateModel(
            name='HaveWatchedList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2083, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('fandom_page', models.CharField(blank=True, max_length=2083, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default-rect-img.png', max_length=2083)),
                ('campaigns', models.ManyToManyField(blank=True, related_name='party_campaigns', through='database.CampaignParty', to='database.campaign')),
            ],
            options={
                'verbose_name': 'Party',
            },
        ),
        migrations.AddField(
            model_name='campaignparty',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.party'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='party',
            field=models.ManyToManyField(blank=True, through='database.CampaignParty', to='database.party'),
        ),
        migrations.CreateModel(
            name='PartyMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.party')),
            ],
        ),
        migrations.CreateModel(
            name='PC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2083, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('fandom_page', models.CharField(blank=True, max_length=2083, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default_profile_pic.png', max_length=2083)),
                ('guest_of', models.ManyToManyField(blank=True, through='database.CampaignGuests', to='database.campaign')),
                ('member_of', models.ManyToManyField(blank=True, through='database.PartyMembers', to='database.party')),
                ('played_by', models.ManyToManyField(blank=True, through='database.ActorCharacters', to='database.actor')),
            ],
            options={
                'verbose_name': 'PC',
            },
        ),
        migrations.AddField(
            model_name='partymembers',
            name='pc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.pc'),
        ),
        migrations.AddField(
            model_name='party',
            name='members',
            field=models.ManyToManyField(blank=True, through='database.PartyMembers', to='database.pc'),
        ),
        migrations.AddField(
            model_name='campaignguests',
            name='pc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.pc'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='guest_pcs',
            field=models.ManyToManyField(blank=True, through='database.CampaignGuests', to='database.pc'),
        ),
        migrations.AddField(
            model_name='actorcharacters',
            name='pc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.pc'),
        ),
        migrations.AddField(
            model_name='actor',
            name='characters',
            field=models.ManyToManyField(blank=True, through='database.ActorCharacters', to='database.pc'),
        ),
        migrations.CreateModel(
            name='ProducerCampaigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.producer')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
            ],
        ),
        migrations.AddField(
            model_name='producer',
            name='campaigns',
            field=models.ManyToManyField(blank=True, related_name='Producer_campaigns', through='database.ProducerCampaigns', to='database.campaign'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='produced_by',
            field=models.ManyToManyField(blank=True, related_name='campaign_companies', through='database.ProducerCampaigns', to='database.producer'),
        ),
        migrations.CreateModel(
            name='ProducerFollowers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.producer')),
            ],
        ),
        migrations.CreateModel(
            name='ProducerOwners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.producer')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.CharField(blank=True, default='static/images/default_profile_pic.png', max_length=2083, null=True)),
                ('actor_accounts', models.ManyToManyField(blank=True, through='database.ActorAccounts', to='database.actor')),
                ('actors_following', models.ManyToManyField(blank=True, related_name='actors_following', through='database.ActorFollowers', to='database.actor')),
                ('campaigns_following', models.ManyToManyField(blank=True, related_name='campaign_followers', through='database.CampaignFollowers', to='database.campaign')),
                ('campaigns_watched', models.ManyToManyField(blank=True, related_name='Have_Watched', through='database.HaveWatchedList', to='database.campaign')),
                ('episodes_watched', models.ManyToManyField(blank=True, through='database.EpisodesWatched', to='database.episode')),
                ('producer_accounts', models.ManyToManyField(blank=True, through='database.ProducerOwners', to='database.producer')),
                ('producers_following', models.ManyToManyField(blank=True, related_name='producers_following', through='database.ProducerFollowers', to='database.producer')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
            },
        ),
        migrations.AddField(
            model_name='producerowners',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile'),
        ),
        migrations.AddField(
            model_name='producerfollowers',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile'),
        ),
        migrations.AddField(
            model_name='producer',
            name='account_owners',
            field=models.ManyToManyField(blank=True, related_name='Producer_owners', through='database.ProducerOwners', to='database.profile'),
        ),
        migrations.AddField(
            model_name='producer',
            name='followers',
            field=models.ManyToManyField(blank=True, related_name='Producer_followers', through='database.ProducerFollowers', to='database.profile'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('CRUD_event', 'CRUD_event')], max_length=100, null=True)),
                ('subject', models.CharField(default='[Subject]', max_length=50)),
                ('message', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('read_status', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='database.profile')),
            ],
            options={
                'verbose_name': 'Notification',
            },
        ),
        migrations.AddField(
            model_name='havewatchedlist',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile'),
        ),
        migrations.AddField(
            model_name='episodeswatched',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile'),
        ),
        migrations.AddField(
            model_name='campaignfollowers',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='followers',
            field=models.ManyToManyField(blank=True, through='database.CampaignFollowers', to='database.profile'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='watchedlist_profiles',
            field=models.ManyToManyField(blank=True, related_name='watched_campaign', through='database.HaveWatchedList', to='database.profile'),
        ),
        migrations.AddField(
            model_name='actorfollowers',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile'),
        ),
        migrations.AddField(
            model_name='actoraccounts',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile'),
        ),
        migrations.AddField(
            model_name='actor',
            name='account_owners',
            field=models.ManyToManyField(blank=True, related_name='actor_owner', through='database.ActorAccounts', to='database.profile'),
        ),
        migrations.AddField(
            model_name='actor',
            name='followers',
            field=models.ManyToManyField(blank=True, through='database.ActorFollowers', to='database.profile'),
        ),
        migrations.CreateModel(
            name='PublisherSystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.publisher')),
            ],
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2083, null=True)),
                ('blurb', models.TextField(blank=True, max_length=5000, null=True)),
                ('link', models.CharField(blank=True, max_length=2083, null=True)),
                ('image_url', models.CharField(blank=True, default='static/images/default-rect-img.png', max_length=2083)),
                ('campaigns', models.ManyToManyField(blank=True, related_name='system_campaigns', through='database.CampaignSystem', to='database.campaign')),
                ('published_by', models.ManyToManyField(blank=True, related_name='system_publishers', through='database.PublisherSystems', to='database.publisher')),
            ],
            options={
                'verbose_name': 'System',
            },
        ),
        migrations.AddField(
            model_name='publishersystems',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.system'),
        ),
        migrations.AddField(
            model_name='publisher',
            name='systems',
            field=models.ManyToManyField(blank=True, related_name='publisher_systems', through='database.PublisherSystems', to='database.system'),
        ),
        migrations.AddField(
            model_name='campaignsystem',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.system'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='system',
            field=models.ManyToManyField(blank=True, related_name='campaign_systems', through='database.CampaignSystem', to='database.system'),
        ),
        migrations.CreateModel(
            name='WatchingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='campaigns_watching',
            field=models.ManyToManyField(blank=True, related_name='Watching', through='database.WatchingList', to='database.campaign'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='watchinglist_profiles',
            field=models.ManyToManyField(blank=True, related_name='watching_campaign', through='database.WatchingList', to='database.profile'),
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.campaign')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='campaigns_to_watch',
            field=models.ManyToManyField(blank=True, related_name='To_Watch', through='database.Watchlist', to='database.campaign'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='watchlist_profiles',
            field=models.ManyToManyField(blank=True, related_name='towatch_campaign', through='database.Watchlist', to='database.profile'),
        ),
    ]
